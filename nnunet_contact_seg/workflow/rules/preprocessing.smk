rule n4biascorr:
    input:
        t1w=bids(
            root=config["bids_dir"],
            suffix="T1w",
            session="pre",
            run="02",
            datatype="anat",
            extension=".nii.gz",
            **inputs["pre_t1w"].wildcards,
        ),
    output:
        corrected_t1w=bids(
            root=config["output_dir"],
            suffix="T1w",
            desc="n4biascorr",
            datatype="n4biascorr",
            extension=".nii.gz",
            **inputs["pre_t1w"].wildcards,
        ),
    script:
        "../scripts/n4_bias_corr.py"


rule get_registration_matrix:
    input:
        post_ct=bids(
            root=config["bids_dir"],
            suffix="ct",
            datatype="ct",
            session="post",
            acq="Electrode",
            extension=".nii.gz",
            **inputs["post_ct"].wildcards,
        ),
        fixed_t1w=bids(
            root=config["output_dir"],
            suffix="T1w",
            desc="n4biascorr",
            datatype="n4biascorr",
            extension=".nii.gz",
            **inputs["pre_t1w"].wildcards,
        ),
    output:
        xfm_slicer=bids(
            root=config["output_dir"],
            datatype="registration",
            space="T1w",
            suffix="slicer.mat",
            **inputs["post_ct"].wildcards,
        ),
        xfm_ras=bids(
            root=config["output_dir"],
            datatype="registration",
            space="T1w",
            suffix="xfm.txt",
            **inputs["post_ct"].wildcards,
        ),
        out_im=bids(
            root=config["output_dir"],
            datatype="registration",
            space="T1w",
            suffix="ct.nii.gz",
            **inputs["post_ct"].wildcards,
        ),
    script:
        "../scripts/registration.py"
