bids_dir: "/path/to/bids/dir"
output_dir: "/path/to/output/dir"

force: true
debug: false
derivatives: false

analysis_levels:
  - participant

targets_by_analysis_level:
  participant:
    - all

pybids_inputs:
  post_ct:
    filters:
      suffix: ct
      session: post
      extension: .nii.gz
    wildcards:
      - subject
      - run
  pre_t1w:
    filters:
      suffix: T1w
      extension: .nii.gz
      datatype: anat
      session: pre
      run: "02"
    wildcards:
      - subject
      - acquisition
      - reconstruction

parse_args:
  bids_dir:
    help: >
      The directory with the input dataset formatted according to the BIDS standard.
  output_dir:
    help: >
      The directory where the output files should be stored. If you are running group
      level analysis this folder should be prepopulated with the results of the
      participant level analysis.
  analysis_level:
    help: Level of the analysis that will be performed.
    choices:
      - participant
  --participant_label:
    help: >
      The label(s) of the participant(s) that should be analyzed. The label
      corresponds to sub-<participant_label> from the BIDS spec.
    nargs: "+"
  --exclude_participant_label:
    help: >
      The label(s) of the participant(s) that should be excluded. The label
      corresponds to sub-<participant_label> from the BIDS spec.
    nargs: "+"
  --derivatives:
    help: >
      Path(s) to a derivatives dataset, for folder(s) that contains multiple derivatives datasets.
    default: false
    nargs: "+"
  --skip-bids-validation:
    help: >
      Skip validation of BIDS dataset. BIDS validation is performed by default.
    dest: plugins.validator.skip
    action: store_true
    default: false
  --run_all_folds:
    help: >
      Specify whether to use all 5 folds of the model trained for inference.
    default: false
  --transform:
    help: >
      Whether predicted coordinates should be transformed.
    action: store_true
    default: false
  --label:
    help: >
      Whether predicted coordinates should be labelled by electrode.
    action: store_true
    default: false
  --use_gpu:
    help: >
      Enable GPU for inference.
    default: false
    action: store_true
  --manual_reg_matrix:
    help: 'Path to .txt file with the registration matrix.'
    default: False
    action: 'store_true'
  --contacts_qc:
    help: 'Produces html qc plots to show labelled contacts over the ct and t1w images (default: %(default)s)'
    default: False
    action: 'store_true' 
  --exclude_label_map:
    help: 'Exludes the label mapping code for the qc plots only displaying the acronyms (default: %(default)s)'
    default: False
    action: 'store_true' 


containers: {}

resource_urls:
  nnUNet_model: "zenodo.org/records/14519315/files/nnunet_seeg_250_fullres.zip"

electrode_type: "resources/electrodes.config"

plugins:
  validator:
    skip: false
